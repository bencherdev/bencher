---
import {
	architecture,
    schema,
	explanation,
	howTo,
	reference,
	tutorial,
} from "../../../i18n/ui.ts";
import { getLangCollection, langPath } from "../../../i18n/utils.ts";
import Collection, { collectionPath } from "../../../util/collection.ts";

interface Props {
	lang: string;
}

// Docs
const docsTutorialCollection = await getLangCollection(
	Collection.docs_tutorial,
);
const docsHowToCollection = await getLangCollection(Collection.docs_how_to);
const docsExplanationCollection = await getLangCollection(
	Collection.docs_explanation,
);
const docsReferenceCollection = await getLangCollection(
	Collection.docs_reference,
);

const { lang } = Astro.props;
---

{[
  {
    label: tutorial(lang),
    collection: Collection.docs_tutorial,
    content: docsTutorialCollection[lang],
  },
  {
    label: howTo(lang),
    collection: Collection.docs_how_to,
    content: docsHowToCollection[lang],
  },
  {
    label: explanation(lang),
    collection: Collection.docs_explanation,
    content: docsExplanationCollection[lang],
  },
  {
    label: reference(lang),
    collection: Collection.docs_reference,
    content: docsReferenceCollection[lang],
    prefix: (
      <li>
        <a href={`/${langPath(lang)}docs/api/`}>REST API</a>
      </li>
      <li>
        <a href={`/${langPath(lang)}docs/reference/architecture/`}>{architecture(lang)}</a>
      </li>
      <li>
        <a href={`/${langPath(lang)}docs/reference/schema/`}>{schema(lang)}</a>
      </li>
    ),
  }
].map(({ label, collection, content, prefix }) => (
  <p class="menu-label">{label}</p>
  <ul class="menu-list">
    {prefix}
    {
      content?.map((page) => (
        <li>
          <a href={`/${langPath(lang)}docs/${collectionPath(collection)}/${page.slug}/`}>{page.data.title}</a>
        </li>
      ))
    }
  </ul>
))}
